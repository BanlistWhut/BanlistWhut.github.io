(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{495:function(e,t,a){"use strict";a.r(t);var s=a(27),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"自增-减"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自增-减"}},[e._v("#")]),e._v(" 自增/减")]),e._v(" "),a("p",[e._v("自增/减操作分为两种：")]),e._v(" "),a("ul",[a("li",[e._v("前置递增/减："),a("code",[e._v("a++/a--")])]),e._v(" "),a("li",[e._v("后置递增/减："),a("code",[e._v("++a/--a")])])]),e._v(" "),a("p",[e._v("对于自增/减操作，初学时总是看到这样错误的说明：")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("let")]),e._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" uid "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" id"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 0")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 赋值运算符优先于算数运算符，先执行赋值操作，再执行++操作")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("let")]),e._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" uid "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("++")]),e._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 1")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 算数运算符优先于赋值运算符，先执行++操作，再执行赋值操作")]),e._v("\n")])])]),a("p",[e._v("其实稍微翻一下 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence",target:"_blank",rel:"noopener noreferrer"}},[e._v("MDN"),a("OutboundLink")],1),e._v(" 或其余的书都可以得到：后置递增/减的优先级为 18，前置递增/减的优先级为 17，而赋值操作的优先级为 3。")]),e._v(" "),a("h2",{attrs:{id:"原理定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理定义"}},[e._v("#")]),e._v(" 原理定义")]),e._v(" "),a("p",[e._v("在 "),a("a",{attrs:{href:"https://tc39.es/ecma262/#sec-update-expressions",target:"_blank",rel:"noopener noreferrer"}},[e._v("ECMA"),a("OutboundLink")],1),e._v(" 标准中可以找到如下：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# 12.4.5 Postfix Decrement Operator（后置递增）\n1. Let lhs be the result of evaluating LeftHandSideExpression.\n\n2. Let oldValue be ? ToNumeric(? GetValue(lhs)).\n\n3. Let newValue be ! Type(oldValue)::subtract(oldValue, Type(oldValue)::unit).\n\n4. Perform ? PutValue(lhs, newValue).\n\n5. Return oldValue.\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# 12.4.7 Prefix Decrement Operator（前置递增）\n1. Let expr be the result of evaluating UnaryExpression.\n\n2. Let oldValue be ? ToNumeric(? GetValue(expr)).\n\n3. Let newValue be ! Type(oldValue)::add(oldValue, Type(oldValue)::unit).\n\n4. Perform ? PutValue(expr, newValue).\n\n5. Return newValue.\n")])])]),a("p",[e._v("对比两个第五项返回值操作，可以发现"),a("strong",[e._v("后置递增是返回旧的值")]),e._v("，而"),a("strong",[e._v("前置递增是返回新的值")]),e._v("。")]),e._v(" "),a("p",[e._v("赋值操作是将返回值赋给对应的变量，那么结果就很明确了。")])])}),[],!1,null,null,null);t.default=r.exports}}]);