(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{530:function(e,t,a){"use strict";a.r(t);var r=a(27),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"诞生"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#诞生"}},[e._v("#")]),e._v(" 诞生")]),e._v(" "),a("p",[e._v("默认情况下，浏览器是同步加载 JavaScript 脚本，即引擎遇到脚本就会停下来，若是外部脚本还需要等待下载完成，再执行，最后继续向下渲染页面。所以在早期都默认将脚本放在 "),a("code",[e._v("body")]),e._v(" 的最下方。")]),e._v(" "),a("p",[e._v("在等待脚本下载及执行的过程，导致浏览器阻塞无响应，会带来不好的体验，所以就产生了异步加载脚本的方式。")]),e._v(" "),a("h2",{attrs:{id:"区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[e._v("#")]),e._v(" 区别")]),e._v(" "),a("h3",{attrs:{id:"_1-defer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-defer"}},[e._v("#")]),e._v(" 1. defer")]),e._v(" "),a("p",[a("code",[e._v("defer")]),e._v(" 会等到文档完成解析后，才会执行。")]),e._v(" "),a("p",[a("code",[e._v("defer")]),e._v(" 执行顺序固定，根据页面中顺序执行。")]),e._v(" "),a("blockquote",[a("p",[a("code",[e._v("defer")]),e._v(" "),a("strong",[e._v("属性对模块脚本没有作用 —— 他们默认 defer。")])])]),e._v(" "),a("h3",{attrs:{id:"_2-async"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-async"}},[e._v("#")]),e._v(" 2. async")]),e._v(" "),a("p",[a("code",[e._v("async")]),e._v(" 一旦下载完成，渲染引擎就会中断渲染，执行这个脚本之后再继续渲染。")]),e._v(" "),a("p",[a("code",[e._v("async")]),e._v(" 执行顺序不固定，看谁先下载完了。")])])}),[],!1,null,null,null);t.default=s.exports}}]);