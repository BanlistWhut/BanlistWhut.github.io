(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{393:function(a,s,t){"use strict";t.r(s);var r=t(27),e=Object(r.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境"}},[a._v("#")]),a._v(" 环境")]),a._v(" "),t("p",[a._v("创建一台虚拟机为私有仓库，本机向虚拟机的仓库发起上传和下载。")]),a._v(" "),t("h2",{attrs:{id:"搭建仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建仓库"}},[a._v("#")]),a._v(" 搭建仓库")]),a._v(" "),t("p",[a._v("在虚拟机上创建仓库，并指定镜像文件存放在本地的默认路径，为其设置 docker 重启后跟随重启。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker run -d --restart"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("always --name registry -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5000")]),a._v(":5000 -v /opt/data/registry:/var/lib/registry registry\n")])])]),t("p",[a._v("后续的 "),t("code",[a._v("registry")]),a._v(" 配置可见 "),t("code",[a._v("/etc/docker/registry/config.yml")]),a._v("。")]),a._v(" "),t("h2",{attrs:{id:"主机测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主机测试"}},[a._v("#")]),a._v(" 主机测试")]),a._v(" "),t("p",[a._v("Docker 新的版本对安全性要求较高，要求仓库支持 SSL/TLS 证书，可以在本地信任该仓库。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" /etc/docker/daemon.json\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在 JSON 中追加内容，对应的 IP 地址")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"insecure-registries"')]),a._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"192.168.0.107:5000"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 重启服务")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl daemon-reload\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl restart docker\n")])])]),t("p",[a._v("主机上传镜像到虚拟机仓库验证。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker pull ubuntu\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 打 tag")]),a._v("\ndocker tag ubuntu "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".0.107:5000/tubuntu\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# push")]),a._v("\ndocker push "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".0.107:5000/tubuntu\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 验证")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" http://192.168.0.107:5000/v2/_catalog\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# {"repositories":["tubuntu"]} # 成功')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 还可以直接打开上面链接进行查看")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或者在虚拟机上查看 ll /opt/data/registry/docker/registry/v2/repositories")]),a._v("\n")])])]),t("p",[a._v("下载验证。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 首先删除本地的镜像")]),a._v("\ndocker rmi "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".0.107:5000/tubuntu\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 验证")]),a._v("\ndocker images\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 拉取")]),a._v("\ndocker pull "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".0.107:5000/tubuntu\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 验证")]),a._v("\ndocker images\n")])])]),t("h2",{attrs:{id:"harbor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#harbor"}},[a._v("#")]),a._v(" Harbor")]),a._v(" "),t("p",[a._v("另外一个选择是使用 "),t("a",{attrs:{href:"https://github.com/goharbor/harbor",target:"_blank",rel:"noopener noreferrer"}},[a._v("Harbor"),t("OutboundLink")],1),a._v("。")]),a._v(" "),t("h3",{attrs:{id:"_1-获取-harbor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-获取-harbor"}},[a._v("#")]),a._v(" 1. 获取 Harbor")]),a._v(" "),t("p",[a._v("先下载文件。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 目标压缩包")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://github.com/goharbor/harbor/releases/download/v2.0.5/harbor-offline-installer-v2.0.5.tgz\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# gpg")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://github.com/goharbor/harbor/releases/download/v2.0.5/harbor-offline-installer-v2.0.5.tgz.asc\n")])])]),t("p",[a._v("获取文件后先校验有没有问题：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 校验")]),a._v("\ngpg --verify harbor-offline-installer-v2.0.5.tgz.asc harbor-offline-installer-v2.0.5.tgz\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# gpg: using RSA key 7722D168DAEC457806C96FF9644FF454C0B4115C")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# gpg: Can't check signature: No public key")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 导入公钥")]),a._v("\ngpg --keyserver hkps://keyserver.ubuntu.com --receive-keys 7722D168DAEC457806C96FF9644FF454C0B4115C\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 再次校验")]),a._v("\ngpg --verify harbor-offline-installer-v2.0.5.tgz.asc harbor-offline-installer-v2.0.5.tgz\n")])])]),t("h3",{attrs:{id:"_2-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装"}},[a._v("#")]),a._v(" 2. 安装")]),a._v(" "),t("p",[a._v("先进行解压：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" xvf harbor-offline-installer-v2.0.5.tgz\n")])])]),t("p",[a._v("修改配置文件：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" harbor.yml.tmpl harbor.yml\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 修改配置")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" harbor.yml\n")])])]),t("p",[a._v("其中 "),t("code",[a._v("data_volume")]),a._v(" 挂载数据。")]),a._v(" "),t("p",[a._v("在安装前需要确认已经准备好 "),t("code",[a._v("docker")]),a._v(" 及 "),t("code",[a._v("docker-compose")]),a._v("。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" install.sh\n")])])]),t("h3",{attrs:{id:"_3-重装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-重装"}},[a._v("#")]),a._v(" 3. 重装")]),a._v(" "),t("p",[a._v("当修改配置后运行 "),t("code",[a._v("bash prepare")]),a._v(" 即可。")]),a._v(" "),t("h3",{attrs:{id:"_4-用户"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-用户"}},[a._v("#")]),a._v(" 4. 用户")]),a._v(" "),t("p",[a._v("Harbor 使用前需要注册帐号，推送镜像前需要先创建项目，邀请成员才行。")])])}),[],!1,null,null,null);s.default=e.exports}}]);