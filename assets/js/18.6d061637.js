(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{396:function(a,t,s){"use strict";s.r(t);var e=s(27),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[a._v("#")]),a._v(" 概念")]),a._v(" "),s("p",[a._v("简单来说，容器是镜像的一个运行实例。所不同的是，镜像是静态的只读文件，而容器带有运行时需要的可写文件层，同时，容器中的应用进程处于运行状态。")]),a._v(" "),s("h2",{attrs:{id:"状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#状态"}},[a._v("#")]),a._v(" 状态")]),a._v(" "),s("h3",{attrs:{id:"_1-运行中的容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-运行中的容器"}},[a._v("#")]),a._v(" 1. 运行中的容器")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -a 所有的")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -f 可以按需求进行过滤")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 过滤参数 status：One of created, restarting, running, removing, paused, exited, or dead")]),a._v("\n")])])]),s("h3",{attrs:{id:"_2-容器日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-容器日志"}},[a._v("#")]),a._v(" 2. 容器日志")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker logs [OPTIONS] CONTAINER")]),a._v("\ndocker logs ttubuntu\n")])])]),s("h3",{attrs:{id:"_3-容器信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-容器信息"}},[a._v("#")]),a._v(" 3. 容器信息")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 具体信息")]),a._v("\ndocker insepect ttubuntu\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 内部进程")]),a._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("top")]),a._v(" ttubuntu\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 统计信息")]),a._v("\ndocker stats ttubuntu\n")])])]),s("h3",{attrs:{id:"_4-容器变更"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-容器变更"}},[a._v("#")]),a._v(" 4. 容器变更")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" ttubuntu\n")])])]),s("h3",{attrs:{id:"_5-端口映射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-端口映射"}},[a._v("#")]),a._v(" 5. 端口映射")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker port ttubuntu\n")])])]),s("h2",{attrs:{id:"操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作"}},[a._v("#")]),a._v(" 操作")]),a._v(" "),s("h3",{attrs:{id:"_1-创建容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建容器"}},[a._v("#")]),a._v(" 1. 创建容器")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker create -it --name ttubuntu ubuntu "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 默认新创建的容器为停止状态")]),a._v("\n")])])]),s("ul",[s("li",[s("code",[a._v("-i")]),a._v(" 让容器的标准输入保持打开")]),a._v(" "),s("li",[s("code",[a._v("-t")]),a._v(" 让 Docker 分配一个伪终端并绑定到容器上")])]),a._v(" "),s("h3",{attrs:{id:"_2-启动容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-启动容器"}},[a._v("#")]),a._v(" 2. 启动容器")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker start [OPTIONS] CONTAINER [CONTAINER...]")]),a._v("\ndocker start ttubuntu\n")])])]),s("h3",{attrs:{id:"_3-执行容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-执行容器"}},[a._v("#")]),a._v(" 3. 执行容器")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker run ubuntu "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello world"')]),a._v("\n")])])]),s("p",[a._v("等价于先执行 "),s("code",[a._v("docker create")]),a._v(" 再执行 "),s("code",[a._v("docker start")]),a._v("，在输出 "),s("code",[a._v("hello world")]),a._v(" 后容器自动停止。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 守护态 -d")]),a._v("\ndocker run -d ubuntu /bin/sh -c "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"while true; do echo hello world; sleep 1;done"')]),a._v("\n")])])]),s("h3",{attrs:{id:"_4-暂停-恢复容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-暂停-恢复容器"}},[a._v("#")]),a._v(" 4. 暂停/恢复容器")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker pause ttubuntu\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker unpause ttubuntu")]),a._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可见 paused 状态")]),a._v("\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                   PORTS               NAMES\n228fe9793889        ubuntu              "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/bin/bash"')]),a._v("         "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("14")]),a._v(" minutes ago      Up "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("14")]),a._v(" minutes "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Paused"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("                       ttubuntu\n")])])]),s("h3",{attrs:{id:"_5-终止"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-终止"}},[a._v("#")]),a._v(" 5. 终止")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker stop ttubuntu\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 验证")]),a._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ttubuntu 已消失")]),a._v("\n")])])]),s("h3",{attrs:{id:"_6-启动-重启容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-启动-重启容器"}},[a._v("#")]),a._v(" 6. 启动/重启容器")]),a._v(" "),s("p",[s("code",[a._v("restart")]),a._v(" 命令会将一个运行态的容器先终止，然后再重新启动。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker start ttubuntu\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker restart ttubuntu")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 验证")]),a._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ttubuntu 可见")]),a._v("\n")])])]),s("h3",{attrs:{id:"_7-清除停止状态的容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-清除停止状态的容器"}},[a._v("#")]),a._v(" 7. 清除停止状态的容器")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker container prune\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 验证")]),a._v("\ndocker start ttubuntu\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Error response from daemon: No such container: ttubuntu")]),a._v("\n")])])]),s("h3",{attrs:{id:"_8-删除容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-删除容器"}},[a._v("#")]),a._v(" 8. 删除容器")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker rm [OPTIONS] CONTAINER [CONTAINER...]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -v 可以删除容器挂载的数据卷")]),a._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" ttubuntu\n")])])]),s("h3",{attrs:{id:"_9-更新容器配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-更新容器配置"}},[a._v("#")]),a._v(" 9. 更新容器配置")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker update ttubuntu\n")])])]),s("h2",{attrs:{id:"进入容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进入容器"}},[a._v("#")]),a._v(" 进入容器")]),a._v(" "),s("p",[a._v("在使用 "),s("code",[a._v("-d")]),a._v(" 参数启动容器后，容器会进入后台，无法看到容器的输出信息，可以利用 "),s("code",[a._v("docker attach")]),a._v(" 或 "),s("code",[a._v("docker exec")]),a._v(" 进入容器。")]),a._v(" "),s("p",[s("code",[a._v("attach")]),a._v(" 不会在容器中创建进程执行额外的命令，只是附着到容器上；"),s("code",[a._v("exec")]),a._v(" 会在运行的容器上创建进程执行新的命令。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it ttubuntu "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v("\n")])])]),s("h2",{attrs:{id:"分享"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分享"}},[a._v("#")]),a._v(" 分享")]),a._v(" "),s("h3",{attrs:{id:"_1-导出容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-导出容器"}},[a._v("#")]),a._v(" 1. 导出容器")]),a._v(" "),s("p",[a._v("不管容器是否处于运行状态，都可以导出。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker export [OPTIONS] CONTAINER")]),a._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" -o ubuntu-latest.tar ttubuntu\n")])])]),s("h3",{attrs:{id:"_2-导入容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-导入容器"}},[a._v("#")]),a._v(" 2. 导入容器")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker import [OPTIONS] file|URL|- [REPOSITORY[:TAG]]")]),a._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("import")]),a._v(" http://example.com/exampleimage.tgz\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("import")]),a._v(" ubuntu-latest.tar\n")])])]),s("h3",{attrs:{id:"_3-复制文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-复制文件"}},[a._v("#")]),a._v(" 3. 复制文件")]),a._v(" "),s("p",[a._v("主机和容器间复制文件。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" data ttubuntu:/tmp/\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);