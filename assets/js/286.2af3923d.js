(window.webpackJsonp=window.webpackJsonp||[]).push([[286],{662:function(t,a,n){"use strict";n.r(a);var e=n(27),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"什么是代理服务器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是代理服务器"}},[t._v("#")]),t._v(" 什么是代理服务器")]),t._v(" "),n("p",[t._v("代理服务器，客户机在发送请求时，不会直接发送给目的主机，而是先发送给代理服务器，代理服务接受客户机请求之后，再向主机发出，并接收目的主机返回的数据，存放在代理服务器的硬盘中，再发送给客户机。")]),t._v(" "),n("p",[n("img",{attrs:{src:"http://www.qfdmy.com/wp-content/uploads/2019/08/edaa206ef7713d0.png",alt:"img"}})]),t._v(" "),n("h2",{attrs:{id:"为什么要使用代理服务器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用代理服务器"}},[t._v("#")]),t._v(" 为什么要使用代理服务器")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("提高访问速度：")]),t._v(" 由于目标主机返回的数据会存放在代理服务器的硬盘中，因此下一次客户再访问相同的站点数据时，会直接从代理服务器的硬盘中读取，起到了缓存的作用，尤其对于热门站点能明显提高请求速度。")]),t._v(" "),n("li",[n("strong",[t._v("防火墙作用：")]),t._v(" 由于所有的客户机请求都必须通过代理服务器访问远程站点，因此可在代理服务器上设限，过滤某些不安全信息。")]),t._v(" "),n("li",[n("strong",[t._v("通过代理服务器访问不能访问的目标站点：")]),t._v(" 互联网上有许多开放的代理服务器，客户机在访问受限时，可通过不受限的代理服务器访问目标站点，通俗说，我们使用的翻墙浏览器就是利用了代理服务器，虽然不能出国，但也可直接访问外网。")])]),t._v(" "),n("h2",{attrs:{id:"什么是正向代理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是正向代理"}},[t._v("#")]),t._v(" 什么是正向代理")]),t._v(" "),n("p",[t._v("正向代理，架设在客户机与目标主机之间，只用于代理内部网络对 Internet 的连接请求，客户机必须指定代理服务器,并将本来要直接发送到 Web 服务器上的 HTTP 请求发送到代理服务器中。")]),t._v(" "),n("p",[n("img",{attrs:{src:"http://www.qfdmy.com/wp-content/uploads/2019/08/150135f1004fc35.png",alt:"img"}})]),t._v(" "),n("h2",{attrs:{id:"什么是反向代理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是反向代理"}},[t._v("#")]),t._v(" 什么是反向代理")]),t._v(" "),n("p",[t._v("反向代理服务器架设在服务器端，通过缓冲经常被请求的页面来缓解服务器的工作量，将客户机请求转发给内部网络上的目标服务器；并将从服务器上得到的结果返回给 Internet 上请求连接的客户端，此时代理服务器与目标主机一起对外表现为一个服务器。")]),t._v(" "),n("p",[n("img",{attrs:{src:"http://www.qfdmy.com/wp-content/uploads/2019/08/230002f000af055.png",alt:"img"}})]),t._v(" "),n("h2",{attrs:{id:"反向代理有哪些主要应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#反向代理有哪些主要应用"}},[t._v("#")]),t._v(" 反向代理有哪些主要应用")]),t._v(" "),n("p",[t._v("现在许多大型 web 网站都用到反向代理。除了可以防止外网对内网服务器的恶性攻击、缓存以减少服务器的压力和访问安全控制之外，还可以进行负载均衡，将用户请求分配给多个服务器。")]),t._v(" "),n("h2",{attrs:{id:"使用-nginx-反向代理-tomcat"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-nginx-反向代理-tomcat"}},[t._v("#")]),t._v(" 使用 Nginx 反向代理 Tomcat")]),t._v(" "),n("h3",{attrs:{id:"需求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#需求"}},[t._v("#")]),t._v(" 需求")]),t._v(" "),n("ul",[n("li",[t._v("两个 Tomcat 服务通过 Nginx 反向代理")]),t._v(" "),n("li",[t._v("Nginx 服务器：192.168.141.121:80")]),t._v(" "),n("li",[t._v("Tomcat1 服务器：192.168.141.121:8081")]),t._v(" "),n("li",[t._v("Tomcat2 服务器：192.168.141.121:8082")])]),t._v(" "),n("h3",{attrs:{id:"启动-tomcat-容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启动-tomcat-容器"}},[t._v("#")]),t._v(" 启动 Tomcat 容器")]),t._v(" "),n("p",[t._v("启动两个 Tomcat 容器，映射端口为 8081 和 8082，"),n("code",[t._v("docker-compose.yml")]),t._v(" 如下：")]),t._v(" "),n("div",{staticClass:"language-yml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tomcat1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat1\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8081"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tomcat2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat2\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8082"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n")])])]),n("h3",{attrs:{id:"配置-nginx-反向代理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置-nginx-反向代理"}},[t._v("#")]),t._v(" 配置 Nginx 反向代理")]),t._v(" "),n("p",[t._v("修改 "),n("code",[t._v("/usr/local/docker/nginx/conf")]),t._v(" 目录下的 "),n("code",[t._v("nginx.conf")]),t._v(" 配置文件：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("user  nginx;\nworker_processes  1;\nevents {\n    use epoll;\n    worker_connections  1024;\n}\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    sendfile        on;\n    keepalive_timeout  65;\n    # 配置一个代理即 tomcat1 服务器\n    upstream tomcatServer1 {\n        server 192.168.141.121:8081;\n    }\n    # 配置一个代理即 tomcat2 服务器\n    upstream tomcatServer2 {\n        server 192.168.141.121:8082;\n    }\n    # 配置一个虚拟主机\n    server {\n        listen 80;\n        server_name service1.funtl.com;\n        location / {\n                # 域名 service1.funtl.com 的请求全部转发到 tomcatServer1 即 tomcat1 服务上\n                proxy_pass http://tomcatServer1;\n                # 欢迎页面，按照从左到右的顺序查找页面\n                index index.jsp index.html index.htm;\n        }\n    }\n    server {\n        listen 80;\n        server_name service2.funtl.com;\n        location / {\n            # 域名 service2.funtl.com 的请求全部转发到 tomcatServer2 即 tomcat2 服务上\n            proxy_pass http://tomcatServer2;\n            index index.jsp index.html index.htm;\n        }\n    }\n}\n")])])]),n("blockquote",[n("p",[n("strong",[t._v("注意：")]),t._v(" 新版 Nginx 的 "),n("code",[t._v("MARKDOWN_HASHbc3b0556316b0ba241ae6bb86b76e8a2MARKDOWN*HASH*")]),t._v(" "),n("em",[t._v('配置中的名称不可以有下划线("')]),t._v('")，否则会报 '),n("code",[t._v("400")]),t._v(" 错误")])])])}),[],!1,null,null,null);a.default=s.exports}}]);