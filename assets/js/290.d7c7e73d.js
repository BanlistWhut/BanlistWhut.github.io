(window.webpackJsonp=window.webpackJsonp||[]).push([[290],{665:function(t,s,a){"use strict";a.r(s);var e=a(27),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),a("p",[t._v("存储管理与计算管理是两个不同的问题。Persistent Volume 子系统，对存储的供应和使用做了抽象，以 API 形式提供给管理员和用户使用。要完成这一任务，我们引入了两个新的 API 资源："),a("strong",[t._v("Persistent Volume（持久卷）")]),t._v(" 和 "),a("strong",[t._v("Persistent Volume Claim（持久卷消费者）")]),t._v("。")]),t._v(" "),a("p",[t._v("Persistent Volume（PV）是集群之中的一块网络存储。跟 Node 一样，也是集群的资源。PV 跟 Volume (卷) 类似，不过会有独立于 Pod 的生命周期。这一 API 对象包含了存储的实现细节，例如 NFS、iSCSI 或者其他的云提供商的存储系统。Persistent Volume Claim (PVC) 是用户的一个请求。跟 Pod 类似，Pod 消费 Node 的资源，PVC 消费 PV 的资源。Pod 能够申请特定的资源（CPU 和内存）；Claim 能够请求特定的尺寸和访问模式（例如可以加载一个读写，以及多个只读实例）")]),t._v(" "),a("h2",{attrs:{id:"pv-与-pvc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pv-与-pvc"}},[t._v("#")]),t._v(" PV 与 PVC")]),t._v(" "),a("p",[t._v("PV 是集群的资源。PVC 是对这一资源的请求，也是对资源的所有权的检验。PV 和 PVC 之间的互动遵循如下的生命周期。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("供应：")]),t._v(" 集群管理员会创建一系列的 PV。这些 PV 包含了为集群用户提供的真实存储资源，它们可利用 Kubernetes API 来消费。")]),t._v(" "),a("li",[a("strong",[t._v("绑定：")]),t._v(" 用户创建一个包含了容量和访问模式的持久卷申请。Master 会监听 PVC 的产生，并尝试根据请求内容查找匹配的 PV，并把 PV 和 PVC 进行绑定。用户能够获取满足需要的资源，并且在使用过程中可能超出请求数量。如果找不到合适的卷，这一申请就会持续处于非绑定状态，一直到出现合适的 PV。例如一个集群准备了很多的 50G 大小的持久卷，（虽然总量足够）也是无法响应 100G 的申请的，除非把 100G 的 PV 加入集群。")]),t._v(" "),a("li",[a("strong",[t._v("使用：")]),t._v(" Pod 把申请作为卷来使用。集群会通过 PVC 查找绑定的 PV，并 Mount 给 Pod。对于支持多种访问方式的卷，用户在使用 PVC 作为卷的时候，可以指定需要的访问方式。一旦用户拥有了一个已经绑定的 PVC，被绑定的 PV 就归该用户所有了。用户的 Pods 能够通过在 Pod 的卷中包含的 PVC 来访问他们占有的 PV。")]),t._v(" "),a("li",[a("strong",[t._v("释放：")]),t._v(" 当用户完成对卷的使用时，就可以利用 API 删除 PVC 对象了，而且他还可以重新申请。删除 PVC 后，对应的卷被视为 “被释放”，但是这时还不能给其他的 PVC 使用。之前的 PVC 数据还保存在卷中，要根据策略来进行后续处理。")]),t._v(" "),a("li",[a("strong",[t._v("回收：")]),t._v(" PV 的回收策略向集群阐述了在 PVC 释放卷的时候，应如何进行后续工作。目前可以采用三种策略：保留，回收或者删除。保留策略允许重新申请这一资源。在持久卷能够支持的情况下，删除策略会同时删除持久卷以及 AWS EBS/GCE PD 或者 Cinder 卷中的存储内容。如果插件能够支持，回收策略会执行基础的擦除操作（"),a("code",[t._v("rm -rf /thevolume/*")]),t._v("），这一卷就能被重新申请了。")])]),t._v(" "),a("h2",{attrs:{id:"定义-pv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义-pv"}},[t._v("#")]),t._v(" 定义 PV")]),t._v(" "),a("h3",{attrs:{id:"持久卷插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#持久卷插件"}},[t._v("#")]),t._v(" 持久卷插件")]),t._v(" "),a("p",[t._v("持久卷是以插件方式实现的，目前支持的插件如下：")]),t._v(" "),a("ul",[a("li",[t._v("GCEPersistentDisk")]),t._v(" "),a("li",[t._v("AWSElasticBlockStore")]),t._v(" "),a("li",[a("strong",[t._v("NFS（我们采用的是该方案）")])]),t._v(" "),a("li",[t._v("iSCSI")]),t._v(" "),a("li",[t._v("RBD (Ceph Block Device)")]),t._v(" "),a("li",[t._v("Glusterfs")]),t._v(" "),a("li",[t._v("HostPath (单节点测试使用)")]),t._v(" "),a("li",[t._v("本地持久卷")])]),t._v(" "),a("h3",{attrs:{id:"yaml-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yaml-配置"}},[t._v("#")]),t._v(" YAML 配置")]),t._v(" "),a("p",[t._v("创建一个名为 "),a("code",[t._v("nfs-pv-mysql.yml")]),t._v(" 的配置文件")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolume\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nfs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mysql\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置容量")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("capacity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5Gi\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问模式")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 该卷能够以读写模式被多个节点同时加载")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回收策略，这里是基础擦除 `rm-rf/thevolume/*`")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeReclaimPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Recycle\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nfs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# NFS 服务端配置的路径")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/usr/local/kubernetes/volumes"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# NFS 服务端地址")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 192.168.141.130\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readOnly")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署")]),t._v("\nkubectl create -f nfs-pv-mysql.yml\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除")]),t._v("\nkubectl delete -f nfs-pv-mysql.yml\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看")]),t._v("\nkubectl get "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pv")]),t._v("\nNAME           CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   REASON   AGE\nnfs-pv-mysql   5Gi        RWX            Recycle          Available                                   29m\n")])])]),a("h3",{attrs:{id:"配置说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置说明"}},[t._v("#")]),t._v(" 配置说明")]),t._v(" "),a("h4",{attrs:{id:"capacity-容量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#capacity-容量"}},[t._v("#")]),t._v(" Capacity（容量）")]),t._v(" "),a("p",[t._v("一般来说，PV 会指定存储容量。这里需要使用 PV 的 capcity 属性。目前存储大小是唯一一个能够被申请的指标，今后会加入更多属性，例如 IOPS，吞吐能力等。")]),t._v(" "),a("h4",{attrs:{id:"accessmodes-访问模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#accessmodes-访问模式"}},[t._v("#")]),t._v(" AccessModes（访问模式）")]),t._v(" "),a("p",[t._v("只要资源提供者支持，持久卷能够被用任何方式加载到主机上。每种存储都会有不同的能力，每个 PV 的访问模式也会被设置成为该卷所支持的特定模式。例如 NFS 能够支持多个读写客户端，但是某个 NFS PV 可能会在服务器上以只读方式使用。每个 PV 都有自己的一系列的访问模式，这些访问模式取决于 PV 的能力。访问模式的可选范围如下：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("ReadWriteOnce：")]),t._v(" 该卷能够以读写模式被加载到一个节点上")]),t._v(" "),a("li",[a("strong",[t._v("ReadOnlyMany：")]),t._v(" 该卷能够以只读模式加载到多个节点上")]),t._v(" "),a("li",[a("strong",[t._v("ReadWriteMany：")]),t._v(" 该卷能够以读写模式被多个节点同时加载")])]),t._v(" "),a("p",[t._v("在 CLI 下，访问模式缩写为：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("RWO：")]),t._v(" ReadWriteOnce")]),t._v(" "),a("li",[a("strong",[t._v("ROX：")]),t._v(" ReadOnlyMany")]),t._v(" "),a("li",[a("strong",[t._v("RWX：")]),t._v(" ReadWriteMany")])]),t._v(" "),a("p",[t._v("另外，一个卷不论支持多少种访问模式，同时只能以一种访问模式加载。例如一个 GCE Persistent Disk 既能支持 ReadWriteOnce，也能支持 ReadOnlyMany。")]),t._v(" "),a("h4",{attrs:{id:"recyclingpolicy-回收策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#recyclingpolicy-回收策略"}},[t._v("#")]),t._v(" RecyclingPolicy（回收策略）")]),t._v(" "),a("p",[t._v("当前的回收策略可选值包括：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Retain：")]),t._v(" 人工重新申请")]),t._v(" "),a("li",[a("strong",[t._v("Recycle：")]),t._v(" 基础擦除（"),a("code",[t._v("rm-rf/thevolume/*")]),t._v("）")]),t._v(" "),a("li",[a("strong",[t._v("Delete：")]),t._v(" 相关的存储资产例如 AWS EBS，GCE PD 或者 OpenStack Cinder 卷一并删除")])]),t._v(" "),a("p",[t._v("目前，只有 NFS 和 HostPath 支持 Recycle 策略，AWS EBS、GCE PD 以及 Cinder 卷支持 Delete 策略。")]),t._v(" "),a("h4",{attrs:{id:"阶段-phase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阶段-phase"}},[t._v("#")]),t._v(" 阶段（Phase）")]),t._v(" "),a("p",[t._v("一个卷会处于如下阶段之一：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Available：")]),t._v(" 可用资源，尚未被绑定到 PVC 上")]),t._v(" "),a("li",[a("strong",[t._v("Bound：")]),t._v(" 该卷已经被绑定")]),t._v(" "),a("li",[a("strong",[t._v("Released：")]),t._v(" PVC 已经被删除，但该资源尚未被集群回收")]),t._v(" "),a("li",[a("strong",[t._v("Failed：")]),t._v(" 该卷的自动回收过程失败")])]),t._v(" "),a("h2",{attrs:{id:"定义-pvc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义-pvc"}},[t._v("#")]),t._v(" 定义 PVC")]),t._v(" "),a("p",[t._v("创建一个名为 "),a("code",[t._v("nfs-pvc-mysql-myshop.yml")]),t._v(" 的配置文件")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolumeClaim\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nfs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pvc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("myshop\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 需要使用和 PV 一致的访问模式")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 按需分配资源")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1Gi\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署")]),t._v("\nkubectl create -f nfs-pvc-mysql-myshop.yml\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除")]),t._v("\nkubectl delete -f nfs-pvc-mysql-myshop.yml\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看")]),t._v("\nkubectl get pvc\n")])])]),a("h2",{attrs:{id:"部署-mysql8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署-mysql8"}},[t._v("#")]),t._v(" 部署 MySQL8")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("注意：")]),t._v(" 要确保每台 Node 都安装了 NFS 客户端，"),a("code",[t._v("apt-get install -y nfs-common")])])]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("myshop\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("myshop\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("myshop\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8.0.16\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只有镜像不存在时，才会进行镜像拉取")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3306")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同 Docker 配置中的 environment")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MYSQL_ROOT_PASSWORD\n              "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器中的挂载目录")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nfs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("vol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("myshop\n              "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/lib/mysql\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 挂载到数据卷")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nfs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("vol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("myshop\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeClaim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("claimName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nfs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pvc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("myshop\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("myshop\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3306")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3306")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" LoadBalancer\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("myshop\n")])])]),a("h3",{attrs:{id:"测试运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试运行"}},[t._v("#")]),t._v(" 测试运行")]),t._v(" "),a("p",[t._v("部署成功后可以使用 "),a("code",[t._v("kubectl get service")]),t._v(" 查看我们 MySQL 的运行端口，再使用连接工具连接会报如下错误")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://www.qfdmy.com/wp-content/uploads/2019/08/85bc9545ce9ec0c.png",alt:"img"}})]),t._v(" "),a("p",[t._v("意思为无法使用密码的方式登录，在 Docker 部署时我们可以在 YAML 中配置相关参数解决这个问题；下一节我们讲解在 Kubernetes 中采用 "),a("strong",[t._v("ConfigMap")]),t._v(" 的方式配置 MySQL")])])}),[],!1,null,null,null);s.default=n.exports}}]);